name: Create Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22.1"

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build -o learn-${{ github.ref_name }}-windows-amd64.exe

      - name: Build for macOS
        run: GOOS=darwin GOARCH=amd64 go build -o learn-${{ github.ref_name }}-macos-amd64

      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o learn-${{ github.ref_name }}-linux-amd64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./learn-${{ github.ref_name }}-windows-amd64.exe
          asset_name: learn-${{ github.ref_name }}-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./learn-${{ github.ref_name }}-macos-amd64
          asset_name: learn-${{ github.ref_name }}-macos-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./learn-${{ github.ref_name }}-linux-amd64
          asset_name: learn-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream
